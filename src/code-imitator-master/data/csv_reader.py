# import pandas as pd
#
# # Read the input CSV file into a pandas DataFrame
# df = pd.read_csv('gcj2018.csv')
#
# # Define the size of each chunk (1000 rows in this example)
# chunk_size = 1000
#
# # Calculate the number of chunks needed to process the entire file
# num_chunks = len(df) // chunk_size + (len(df) % chunk_size != 0)
#
# # Loop over the chunks and save each one to a separate CSV file
# for i in range(num_chunks):
#     # Calculate the start and end index of the current chunk
#     start_idx = i * chunk_size
#     end_idx = min((i + 1) * chunk_size, len(df))
#
#     # Select the current chunk from the DataFrame
#     df_chunk = df[start_idx:end_idx]
#
#     # Generate the output file name for the current chunk
#     output_file = f'output_file_{i+1}.csv'
#
#     # Save the current chunk to a new CSV file
#     df_chunk.to_csv(output_file, index=False)
#
#
#
#
#
# import os
#
# # Define the list of folder names
# folder_names = ['_MF_',
# 'aben20807',
# 'AbhiSid',
# 'adbjesus',
# 'afonsonevesf',
# 'agw',
# 'Animesh_1993',
# 'Anjupiter',
# 'antguz',
# 'Antoine_No1',
# 'apertu',
# 'ARROMBATOR',
# 'astrid',
# 'BandIT',
# 'bayweiheng',
# 'bcurcio',
# 'Benq',
# 'blook',
# 'bluedawnstar',
# 'boonbeo',
# 'Brimix',
# 'bruhriq',
# 'btzy',
# 'bula',
# 'cheetose',
# 'chenxiaoqino',
# 'Cherish',
# 'chuckl0416',
# 'ckr',
# 'climpet',
# 'cmh007',
# 'Code14',
# 'commy',
# 'cos',
# 'ctyl',
# 'dacin21',
# 'daipham',
# 'daisyo',
# 'danielf',
# 'danielykf',
# 'davi0015',
# 'davidv',
# 'DBZX',
# 'developer4fun',
# 'didenko.ilia',
# 'Doru',
# 'dragonslayerintraining',
# 'dreamzor',
# 'ecnerwala',
# 'EmanueleFWM',
# 'embrio',
# 'fagu',
# 'Felix',
# 'Feynman',
# 'filipeml94',
# 'Filyan',
# 'fine_',
# 'forest',
# 'fpfilko',
# 'Frobenius',
# 'gazelle',
# 'gogapp',
# 'GongChen',
# 'Goodhope',
# 'gsz',
# 'GuanYu',
# 'hansonyu123',
# 'HanTroid',
# 'harryoooooooooo',
# 'hatoo',
# 'hiiwave',
# 'hiwang123',
# 'icelatte',
# 'igerasim',
# 'Istlemin',
# 'jade__',
# 'jaehyun',
# 'jbaldus',
# 'jdh',
# 'johnathan79717',
# 'jonathanpaulson',
# 'Jorik',
# 'Jujuedv',
# 'jwkim',
# 'jwvg0425',
# 'kawatea',
# 'kenichi.t',
# 'kenimo',
# 'kmshihabuddin',
# 'koyumeishi',
# 'Lawali',
# 'lawrencet',
# 'LDFrank',
# 'lebegio',
# 'lh_mj19',
# 'lil_meyer',
# 'linjoehan',
# 'Lius',
# 'lkfstephen',
# 'lmellberg',
# 'LukeKS',
# 'lwchkg',
# 'malinovsky239',
# 'maroon',
# 'MathematicianBaki',
# 'MatrixBuilder',
# 'MenOfPassion',
# 'metamaker',
# 'mfornet',
# 'mhcmatthew',
# 'mhwg',
# 'MikeZZZ',
# 'Mikov',
# 'mittalshubham',
# 'mivael',
# 'MysteryName',
# 'Ne0n',
# 'NewLuminous',
# 'ngard',
# 'nhho',
# 'Nightmare05',
# 'Noam527',
# 'noelnadal',
# 'nofto',
# 'nxphuc',
# 'oeken',
# 'okaduki',
# 'oleg_b',
# 'paniago',
# 'ParanoidAndroid96',
# 'philip1998',
# 'PItS',
# 'plaviajvar',
# 'pmnox',
# 'Princever',
# 'PROtagonist',
# 'pwild',
# 'qr4',
# 'Qwaz',
# 'qweiop77',
# 'radeye',
# 'RayaBurong25.1',
# 'remin',
# 'renanv',
# 'rg99',
# 'ridham0001',
# 'rofi',
# 'rowdark',
# 'rrp212',
# 'Rustyoldman',
# 'Sairi',
# 'Samin',
# 'sanyuwen',
# 'sdcr',
# 'sdya',
# 'Serhat.Giydiren',
# 'ShakuganSky',
# 'ShangKuei',
# 'shdut',
# 'Sheemon7',
# 'shermal',
# 'shivgarg',
# 'SHUXK',
# 'siahuat0727',
# 'SlavaSSU',
# 'slflam',
# 'slowpoke',
# 'Smalltalk',
# 'snaury',
# 'Snuke',
# 'sowfelicity',
# 'spencerhoke',
# 'sping128@gmail.com',
# 'sullyper@gmail.com',
# 'sumoru',
# 'tanakh',
# 'ted',
# 'thundercracker',
# 'tmt514',
# 'toa2525',
# 'Troublemaker',
# 'tuananh',
# 'v.k.ivanov',
# 'vanjo9800',
# 'VashTheStampede',
# 'VIKRAMJEET',
# 'Viniciussn',
# 'Vladster',
# 'vtr_coder',
# 'VUAcoder',
# 'Wan.2000',
# 'waterside',
# 'William324',
# 'xangg',
# 'xllend3',
# 'ylldummy',
# 'yotam',
# 'yuanmax19@7hills.org',
# 'yubowenok',
# 'zaskar',
# 'ZhenjianYang',
# 'zzhang765@wisc.edu',
# 'drotik']
#
# # Create the folders
# os.makedirs('outputs', exist_ok=True)
#
# # Create the folders within the "outputs" folder
# for folder_name in folder_names:
#     folder_path = os.path.join('outputs', folder_name)
#     os.makedirs(folder_path, exist_ok=True)




import os
import pandas as pd
import csv
import sys
csv.field_size_limit(sys.maxsize)

# Read the CSV file into a pandas DataFrame
df = pd.read_csv('gcj2018.csv')

# Create the output folder if it doesn't exist
if not os.path.exists('output'):
    os.makedirs('output')


row_numbers = [85282,
85283,
85285,
85286,
85291,
85292,
85294,
85295,
85340,
85342,
85343,
85344,
85385,
85387,
85388,
85389,
85407,
85408,
85409,
85410,
85415,
85416,
85418,
85419,
85448,
85450,
85452,
85453,
85458,
85460,
85461,
85462,
85467,
85472,
85473,
85474,
85502,
85503,
85504,
85505,
85526,
85527,
85528,
85529,
85530,
85531,
85533,
85534,
85535,
85538,
85539,
85540,
85554,
85555,
85556,
85557,
85563,
85566,
85567,
85568,
85569,
85571,
85572,
85573,
85601,
85602,
85603,
85604,
85609,
85610,
85611,
85612,
85645,
85646,
85647,
85648,
85664,
85665,
85679,
85680,
85745,
85747,
85748,
85749,
85758,
85765,
85766,
85767,
85813,
85816,
85817,
85818,
85840,
85843,
85855,
85856,
85935,
85936,
85937,
85938,
85990,
85991,
85992,
85993,
86000,
86002,
86003,
86004,
86076,
86078,
86079,
86080,
86103,
86107,
86108,
86109,
86114,
86116,
86121,
86122,
86185,
86186,
86188,
86189,
86256,
86266,
86273,
86279,
86311,
86317,
86318,
86319,
86419,
86420,
86421,
86422,
86433,
86439,
86440,
86442,
86490,
86491,
86492,
86493,
86909,
86911,
86913,
86914,
87027,
87028,
87029,
87030,
87072,
87073,
87074,
87075,
87092,
87093,
87094,
87095,
87172,
87173,
87174,
87181,
87321,
87323,
87324,
87325,
87344,
87348,
87349,
87351,
87400,
87402,
87403,
87404,
87409,
87411,
87413,
87414,
87431,
87433,
87434,
87436,
87654,
87655,
87656,
87659,
87679,
87681,
87683,
87685,
87728,
87729,
87730,
87731,
87854,
87855,
87856,
87857,
87871,
87878,
87879,
87880,
88011,
88012,
88013,
88016,
88055,
88058,
88059,
88060,
88089,
88094,
88095,
88096,
88134,
88135,
88145,
88148,
88723,
88732,
88739,
88741,
88748,
88750,
88753,
88759,
88826,
88827,
88828,
88829,
88976,
88983,
88985,
88986,
89029,
89030,
89031,
89032,
89211,
89212,
89216,
89217,
89621,
89622,
89626,
89627,
89740,
89769,
89770,
89771,
89785,
89786,
89787,
89788,
89813,
89814,
89815,
89816,
90020,
90021,
90022,
90023,
90303,
90305,
90307,
90311,
90351,
90352,
90353,
90354,
90411,
90422,
90425,
90426,
90599,
90605,
90606,
90607,
90769,
90773,
90780,
90781,
90915,
90917,
90918,
90920,
91215,
91218,
91219,
91221,
91275,
91276,
91277,
91278,
91685,
91692,
91699,
91700,
91976,
91978,
91979,
91980,
91987,
91990,
91991,
91994,
92061,
92063,
92064,
92065,
92258,
92259,
92260,
92265,
92672,
92677,
92679,
92681,
93219,
93220,
93221,
93224,
93225,
93240,
93247,
93255,
93416,
93417,
93418,
93419,
93598,
93604,
93605,
93609,
93673,
93674,
93675,
93679,
93710,
93711,
93712,
93713,
93771,
93772,
93773,
93774,
93918,
93919,
93926,
93927,
93935,
93936,
93937,
93938,
94001,
94002,
94006,
94010,
94046,
94047,
94048,
94050,
94119,
94120,
94121,
94123,
94124,
94125,
94126,
94127,
94159,
94160,
94161,
94162,
94299,
94300,
94301,
94302,
94463,
94479,
94481,
94483,
94505,
94506,
94509,
94510,
94615,
94616,
94618,
94619,
94648,
94649,
94651,
94652,
94761,
94766,
94767,
94768,
95163,
95166,
95167,
95168,
95185,
95188,
95189,
95190,
95411,
95415,
95417,
95420,
95503,
95504,
95507,
95508,
95665,
95673,
95674,
95675,
95727,
95731,
95733,
95734,
95781,
95782,
95788,
95789,
95838,
95839,
95840,
95841,
95847,
95848,
95849,
95850,
95911,
95918,
95922,
95923,
96102,
96103,
96104,
96107,
96174,
96179,
96181,
96185,
96451,
96453,
96454,
96455,
96816,
96817,
96818,
96819,
96844,
96845,
96846,
96848,
96899,
96900,
96901,
96902,
97199,
97200,
97201,
97202,
97520,
97521,
97522,
97523,
97530,
97531,
97539,
97542,
97568,
97569,
97570,
97571,
97612,
97613,
97614,
97618,
97636,
97643,
97644,
97649,
97749,
97750,
97751,
97753,
98011,
98012,
98013,
98014,
98015,
98016,
98017,
98018,
98069,
98084,
98096,
98097,
98098,
98108,
98112,
98113,
98193,
98194,
98195,
98196,
98277,
98284,
98287,
98288,
98422,
98423,
98424,
98425,
98584,
98585,
98586,
98587,
98636,
98638,
98639,
98642,
98687,
98689,
98693,
98694,
98773,
98781,
98782,
98783,
98947,
98948,
98949,
98950,
98975,
98981,
98993,
98995,
99303,
99304,
99305,
99307,
99465,
99466,
99467,
99468,
99627,
99629,
99630,
99631,
99717,
99718,
99724,
99725,
99810,
99811,
99812,
99813,
99903,
99904,
99905,
99906,
100015,
100017,
100020,
100022,
100206,
100207,
100213,
100214,
100292,
100293,
100296,
100297,
100554,
100561,
100565,
100566,
100752,
100755,
100756,
100757,
101291,
101293,
101294,
101295,
101898,
101901,
101902,
101903,
102085,
102086,
102087,
102088,
102870,
102871,
102872,
102873,
102897,
102898,
102902,
102903,
102965,
102966,
102971,
102972,
103774,
103775,
103777,
103778,
103834,
103837,
103838,
103839,
104110,
104111,
104112,
104113,
105163,
105164,
105167,
105169,
106284,
106293,
106295,
106298,
106618,
106626,
106629,
106631,
107834,
107836,
107837,
107838,
107981,
107984,
107985,
107986,
108019,
108021,
108030,
108031,
108167,
108168,
108169,
108171,
108192,
108197,
108199,
108200,
108678,
108679,
108682,
108686,
109633,
109638,
109639,
109640,
110369,
110371,
110372,
110373,
112059,
112064,
112069,
112070,
112436,
112440,
112441,
112442,
112655,
112656,
112657,
112658,
113934,
113938,
113939,
113941,
117243,
117246,
117247,
117248,
118589,
118592,
118596,
118599,
124461,
124462,
124467,
124469,
124570,
124572,
124573,
124574,
124613,
124614,
124618,
124620,
124686,
124689,
124694,
124699,
125814,
125815,
125818,
125819,
125950,
125951,
125956,
125958,
127153,
127154,
127155,
127161,
127928,
127929,
127930,
127931,
127967,
127968,
127971,
127972,
128002,
128014,
128017,
128018,
128227,
128230,
128232,
128233,
128412,
128413,
128414,
128415,
128593,
128596,
128597,
128598,
128846,
128852,
128854,
128856,
128886,
128887,
128891,
128893,
129097,
129103,
129105,
129110,
130868,
130869,
130870,
130871,
131470,
131471,
131472,
131475,
132525,
132537,
132538,
132540,
133589,
133590,
133591,
133592,
134645,
134649,
134652,
134653,
136155,
136160,
136164,
136168,
140848,
140849,
140850,
140851,
141524,
141531,
141532,
141534,
145582,
145583,
145584,
145585,
150334,
150339,
150340,
150341,
150400,
150402,
150409,
150411,
150869,
150877,
150887,
150889,
164727,
164729,
164735,
164739,
170927,
170928,
170930,
170931,
177771,
177772,
177774,
177777,
249141,
249142,
249143,
249144,
249179,
249180,
249181,
249183,
249184,
249185,
249186,
249189,
249190,
249191,
249193,
249195,
249205,
249206,
249207,
249208,
249210,
249211,
249213,
249216,
249218,
249225,
249226,
249227,
249233,
249236,
249237,
249238,
249281,
249282,
249283,
249284,
249290,
249291,
249292,
249293,
249307,
249308,
249309,
249311,
249312,
249314,
249315,
249316,
249335,
249336,
249337,
249338,
249369,
249370,
249372,
249374,
249399,
249400,
249401,
249403,
249428,
249429,
249430,
249431,
249432,
249434,
249435,
249437,
249453,
249459,
249461,
249466,
249552,
249553,
249554,
249558,
249580,
249581,
249582,
249583,
249588,
249591,
249592,
249593,
249595,
249598,
249600,
249601,
249608,
249609,
249610,
249611,
249686,
249688,
249689,
249690,
249754,
249755,
249756,
249758,
249760,
249761,
249762,
249763,
249773,
249774,
249775,
249776,
249836,
249837,
249838,
249839,
249895,
249896,
249897,
249898,
249933,
249935,
249936,
249938,
250004,
250005,
250006,
250007,
250008,
250009,
250010,
250014,
250030,
250031,
250033,
250035,
250066,
250070,
250071,
250073,
250178,
250179,
250180,
250183,
250185,
250186,
250187,
250189,
250191,
250192,
250193,
250194,
250195,
250201,
250203,
250204,
250205,
250206,
250207,
250210,
250211,
250212,
250213,
250214,
250240,
250241,
250242,
250243,
250244,
250245,
250249,
250254,
250255,
250259,
250260,
250261,
250279,
250282,
250285,
250286,
250297,
250298,
250299,
250300,
250301,
250303,
250305,
250309,
250363,
250364,
250365,
250367,
250376,
250378,
250381,
250383,
250416,
250417,
250418,
250420,
250440,
250442,
250443,
250446,
250493,
250495,
250496,
250497,
250500,
250501,
250502,
250504,
250505,
250506,
250507,
250508,
250510,
250512,
250513,
250514,
250546,
250547,
250550,
250551,
250563,
250564,
250565,
250566,
250567,
250569,
250570,
250572,
250580,
250584,
250585,
250587,
250592,
250593,
250594,
250596,
250677,
250678,
250679,
250682,
250744,
250745,
250746,
250748,
250767,
250771,
250772,
250773,
250828,
250829,
250830,
250834,
250848,
250850,
250851,
250852,
250853,
250854,
250856,
250857,
250868,
250869,
250870,
250871,
250883,
250884,
250885,
250886,
250915,
250916,
250917,
250918,
250919,
250920,
250921,
250922,
250924,
250925,
250927,
250928,
250992,
250993,
250994,
250998,
251056,
251057,
251058,
251059,
251159,
251160,
251161,
251162,
251226,
251227,
251228,
251230,
251302,
251303,
251304,
251306,
251307,
251308,
251310,
251311,
251319,
251323,
251324,
251325,
251362,
251363,
251365,
251366,
251398,
251405,
251411,
251412,
251481,
251482,
251484,
251485,
251537,
251538,
251539,
251540,
251559,
251561,
251563,
251565,
251591,
251592,
251597,
251601,
251607,
251608,
251609,
251610,
251619,
251620,
251621,
251622,
251641,
251642,
251643,
251644,
251782,
251783,
251785,
251786,
251795,
251796,
251797,
251799,
251810,
251811,
251817,
251819,
251849,
251850,
251851,
251852,
251862,
251865,
251866,
251868,
251921,
251923,
251926,
251927,
251928,
251929,
251931,
251933,
252070,
252071,
252072,
252074,
252089,
252090,
252092,
252093,
252110,
252111,
252113,
252114,
252119,
252121,
252127,
252128,
252229,
252230,
252231,
252233,
252265,
252266,
252267,
252268,
252277,
252278,
252280,
252284,
252293,
252296,
252297,
252299,
252307,
252309,
252310,
252311,
252366,
252367,
252368,
252370,
252371,
252372,
252373,
252374,
252376,
252380,
252381,
252386,
252413,
252414,
252415,
252416,
252418,
252420,
252421,
252423,
252442,
252445,
252446,
252447,
252478,
252479,
252480,
252481,
252539,
252540,
252542,
252543,
252644,
252645,
252646,
252649,
252670,
252672,
252673,
252674,
252703,
252704,
252705,
252706,
252723,
252725,
252727,
252728,
252801,
252802,
252806,
252807,
252845,
252846,
252847,
252848,
252926,
252930,
252932,
252935,
252972,
252974,
252975,
252976,
253045,
253046,
253049,
253050,
253077,
253079,
253080,
253082,
253166,
253169,
253171,
253172,
253221,
253222,
253223,
253224,
253268,
253273,
253274,
253276,
253309,
253315,
253321,
253323,
253416,
253428,
253429,
253438,
253458,
253459,
253461,
253464,
253482,
253484,
253485,
253486,
253488,
253490,
253494,
253498,
253499,
253500,
253504,
253507,
253631,
253632,
253633,
253635,
253669,
253670,
253672,
253673,
253784,
253786,
253787,
253788,
253855,
253857,
253861,
253862,
253871,
253872,
253873,
253878,
253938,
253939,
253940,
253941,
254060,
254061,
254063,
254064,
254092,
254093,
254096,
254098,
254123,
254134,
254141,
254142,
254177,
254178,
254179,
254180,
254241,
254242,
254243,
254244,
254377,
254383,
254384,
254385,
254408,
254409,
254410,
254411,
254593,
254594,
254595,
254597,
254600,
254601,
254602,
254603,
254650,
254651,
254652,
254653,
254681,
254682,
254683,
254684,
254710,
254712,
254714,
254715,
254716,
254718,
254719,
254720,
254755,
254756,
254758,
254760,
254763,
254764,
254765,
254766,
254789,
254790,
254791,
254795,
254812,
254813,
254815,
254816,
254818,
254819,
254820,
254823,
254824,
254828,
254830,
254832,
254958,
254959,
254964,
254972,
254975,
254980,
254981,
254984,
255009,
255010,
255011,
255012,
255028,
255029,
255031,
255032,
255042,
255051,
255052,
255053,
255146,
255148,
255150,
255157,
255159,
255160,
255161,
255162,
255223,
255224,
255225,
255228,
255277,
255278,
255279,
255308,
255332,
255333,
255334,
255335,
255456,
255457,
255460,
255462,
255616,
255617,
255618,
255620,
255621,
255628,
255632,
255633,
255637,
255638,
255639,
255641,
255682,
255683,
255687,
255689,
255693,
255694,
255696,
255698,
255699,
255700,
255701,
255702,
255776,
255778,
255779,
255780,
255962,
255963,
255964,
255967,
256028,
256032,
256035,
256039,
256045,
256046,
256047,
256048,
256075,
256077,
256078,
256079,
256193,
256194,
256195,
256205,
256234,
256236,
256239,
256242,
256308,
256310,
256311,
256312,
256393,
256394,
256396,
256399,
256475,
256476,
256477,
256478,
256693,
256694,
256695,
256696,
256731,
256732,
256733,
256734,
256821,
256822,
256823,
256825,
256847,
256851,
256852,
256854,
256909,
256910,
256913,
256914,
257268,
257269,
257272,
257276,
257339,
257340,
257342,
257344,
257471,
257472,
257478,
257481,
257519,
257523,
257525,
257528,
257692,
257693,
257697,
257698,
257772,
257773,
257775,
257776,
258007,
258008,
258010,
258012,
258189,
258195,
258198,
258201,
258342,
258345,
258346,
258347,
260368,
260369,
260370,
260371,
260852,
260853,
260855,
260859,
261173,
261175,
261180,
261187,
261434,
261436,
261443,
261444,
261639,
261642,
261643,
261647,
261859,
261860,
261861,
261863,
261884,
261888,
261889,
261891,
261910,
261911,
261915,
261918,
262187,
262188,
262191,
262195]

filtered_df = df[df.index.isin(row_numbers)]



i = 0
# Loop over the rows in the DataFrame
for index, row in filtered_df.iterrows():
    # Get the value of the "flines" column
    flines = row['flines']

    # print(row['Unnamed: 0'])
    # print(row['username'])
    # print(row['task'])

    #Generate the output file name
    output_file = os.path.join('output', f"output_{i+1}.cpp")
    i = i +1
    # Save the contents of the "flines" column to the output file
    with open(output_file, 'w') as f:
        f.write(flines)

#
# import pandas as pd
#
# # Read the input CSV file into a pandas DataFrame
# df = pd.read_csv('gcj2018.csv')
#
# # Drop the "flines" column from the DataFrame
# df_without_flines = df.drop('flines', axis=1)
#
# # Save the DataFrame without the "flines" column to a new CSV file
# df_without_flines.to_csv('output_file.csv', index=False)

# import csv
#
# # Open the input file for reading and the output file for writing
# with open('gcj2018.csv', 'r') as infile, open('output.csv', 'w', newline='') as outfile:
#     reader = csv.reader(infile)
#     writer = csv.writer(outfile)
#
#     # Write the header row to the output file
#     header = next(reader)
#     header.remove('flines')
#     writer.writerow(header)
#
#     # Loop over the rows in the input file
#     for row in reader:
#         # If the "file" column contains ".CPP", write the filtered row to the output file
#         if ".CPP" in row[0]:
#             # Remove the "flines" column from the filtered row
#             filtered_row = row[:3] + row[4:]
#             writer.writerow(filtered_row)
